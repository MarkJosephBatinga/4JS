@page "/admin/books"
@layout AdminAuthLayout
@attribute [Authorize(Roles = "admin")]
@inject IBookService BookService
@inject NavigationManager NavManager
@inject IToastService Toast

<section class="admin-body px-3 px-md-5 my-3">
    <div class="top-container d-flex align-items-center px-lg-5">
        <div class="left-box d-flex align-items-center me-auto">
            <a class="btn-cancel" href="/admin/dashboard">Cancel</a>
            <a class="btn-cancel ms-5" href="/admin/books/form">Add Books</a>
        </div>
        <div class="right-box">
            <h3 class="title-text">Books</h3>
        </div>
    </div>
    <div class="lower-container">
        <div class="table-box">
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>Book Title</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in Books)
                    {
                        <tr>
                            <td>@book.BookTitle</td>
                            <td>@book.Category</td>
                            <td>@book.Price</td>
                            <td>
                                <button type="button" class="trans-btn" @onclick="() => OnUpdate(book.Id)">Update</button>
                                <button type="button" class="trans-btn" @onclick="() => OnDelete(book)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

@code {
    List<Book> Books = new List<Book>();

    protected async override Task OnInitializedAsync()
    {
        Books = await BookService.GetAllBook();
    }

    private void OnUpdate(int Id)
    {
        NavManager.NavigateTo($"/admin/books/form/{Id}");
    }

    private async Task OnDelete(Book book)
    {
        var result = await BookService.DeleteBook(book);
        Toast.ShowSuccess("Book Successfully Deleted", "Deleted");
        Books = result;
    }
}
